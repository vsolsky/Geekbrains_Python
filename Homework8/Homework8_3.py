# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится
# на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class number_check:
     def check(self, user_input):
        try:
            number=int(user_input)
            return number
        except ValueError:
            print("You entered string")
        except Exception as err:
            print(f"Something went wrong:{err}")

user_input=0
number_check_obj=number_check()
output_list=[]
while user_input != "XXX":
    user_input=input("Enter numbers, to stop enter XXX: ")
    el=number_check_obj.check(user_input)
    if el is not None:
        output_list.append(el)
print(output_list)

